A simple assembler for use with Notch's dcpu.

A description can be found at: http://notch.tumblr.com/post/20056289891/start-classified-transmission.

This project is far from complete. At the moment, only the lexer is complete. The parser walks over the syntax to check for correctness, but doesn't create the syntax trees at the moment.

Here's the simplified BNF the parser uses:

stmt ::= <op> <oper> <seperator> <oper>
		| <label_header> <name> <op> <oper> <seperator> <oper>

op ::= set | add | sub | mul | div | mod | shl | shr | and | bor | xor | ife | ifn | ifg | ifb  | dat

id ::= a | b | c | x | y | z | i | j | PC | SP | O | PUSH | POP | PEEK

oper ::= <open_brace> <expr> <close_brace> | <id> | <name> | <numeric> | <hex_numeric> | <string>

expr ::= <e1> <e0p>

e0p ::= + <e1> <e0p> | - <e1> <e0p> | empty

e1 ::= <e2> <e1p>

e1p ::= * <e2> < e1p> | / <e2> <e1p> | empty

e2 ::= <id> | <name> | <numeric> | <hex_numeric>
